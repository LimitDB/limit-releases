name: "release"

on:
  workflow_dispatch:
    types: [on-demand-release]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
            name: macOS arm64
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
            name: macOS Intel
          - platform: "windows-latest"
            args: ""
            name: Windows x64
          - platform: "ubuntu-22.04" # must be the oldest version we want to support
            args: ""
            name: Linux x64
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out project
        uses: actions/checkout@v4
        with:
          repository: LimitDB/limit
          token: ${{ secrets.GH_TOKEN_FOR_CHECKOUT }}
          ref: ${{ github.event.client_payload.sha }}

      - uses: pnpm/action-setup@v4

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm" # Set this to npm, yarn or pnpm.

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.
        
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "You can download this version from the assets below or visit https://limitdb.com to get it."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          repo: limit-releases
          owner: LimitDB
          releaseCommitish: main
